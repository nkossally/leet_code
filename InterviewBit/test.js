// Definition for singly-linked list.
class Node {
    constructor(data) {
        this.data = data
        this.next = null
    }
}

// Definition for singly-linked list.
//    function Node(data){
//      this.data = data
//      this.next = null
//    }

module.exports = {
    //param A : head node of linked list
    //param B : integer
    //return the head node in the linked list
    partition: function (A, B) {
        if (!A.next) return A;
        let higherNodes = []
        let node = A;
        let newHead
        let prev;
        while (node) {
            if (A.data >= B && node.data < B && !newHead) {
                newHead = node
            }
            if (node.data >= B) {
                higherNodes.push(node)
                if (prev) {
                    prev.next = node.next;
                }
            } else {
                prev = node;
            }
            node = node.next;
        }

        // console.log(higherNodes)
        console.log("newHead", newHead)
        console.log("prev", prev)
        if(!prev) return A
        let curr = prev;
        for (let i = 0; i < higherNodes.length; i++) {
            const node = higherNodes[i]
            curr.next = node;
            curr = node;
        }
        curr.next = null
        console.log(newHead)
        return newHead
    }
};


// const A =[ 9, 6, 9, 4, 7, 7, 8, 9, 6, 4, 7, 7, 4, 8, 5, 1, 6, 7, 7, 9, 7, 4, 1, 1, 4, 8, 7, 8, 2, 3, 5, 9, 2, 8, 2, 5, 8, 8, 1, 9, 8, 3, 4, 3, 9, 6, 5, 3, 4, 2, 9, 9, 4, 4, 3, 9, 3, 1, 3, 8, 1, 7, 2, 5, 5, 1, 3, 8, 5, 6, 8, 3, 2, 7, 4, 2, 6, 2, 3, 1, 3, 7, 8, 5, 9, 3, 4, 8, 3, 6, 5, 7, 9, 4, 5, 2, 6, 3, 6, 2, 6, 3, 5, 5, 4, 5, 2, 1, 5, 3, 4, 5, 7, 5, 9, 7, 7, 7, 7, 2, 2, 4, 4, 7, 3, 2, 4, 9, 1, 7, 9, 3, 4, 6, 5, 7, 9, 8, 7, 4, 1, 7, 3, 4, 7, 1, 3, 6, 4, 2, 7, 5, 4, 7, 2, 7, 6, 5, 8, 5, 3, 4, 7, 8, 6, 4, 7, 7, 9, 5, 7, 4, 1, 8, 8, 3, 9, 3, 6, 9, 8, 7, 4, 9, 9, 1, 4, 7, 4, 6, 5, 3, 2, 5, 4, 4, 1, 8, 3, 7, 2, 7, 8, 8, 6, 1, 6, 3, 7, 5, 4, 2, 1, 8, 9, 1, 9, 8, 1, 7, 5, 4, 7, 6, 2, 6, 6, 1, 7, 7, 1, 2, 4, 3, 8, 9, 8, 2, 6, 7, 8, 6, 1, 6, 8, 9, 6, 7, 7, 2, 3, 2, 6, 9, 9, 9, 9, 6, 2, 6, 2, 1, 9, 4, 9, 9, 3, 3, 7, 1, 4, 4, 1, 8, 7, 5, 7, 5, 3, 6, 8, 1, 3, 6, 4, 1, 3, 9, 7, 5, 4, 1, 8, 5, 4, 1, 1, 7, 4, 8, 9, 5, 1, 4, 8, 6, 1, 8, 7, 3, 1, 3, 4, 7, 2, 3, 1, 7, 9, 6, 8, 2, 4, 4, 5, 3, 5, 4, 6, 1, 2, 6, 4, 9, 1, 9, 3, 7, 5, 8, 6, 5, 7, 7, 3, 2, 9, 2, 4, 1, 1, 4, 1, 2, 4, 1, 9, 7, 9, 4, 4, 7, 2, 4, 9, 1, 3, 2, 3, 1, 7, 8, 3, 6, 7, 5, 2, 4, 4, 8, 6, 5, 4, 8, 6, 7, 1, 2, 5, 4, 6, 5, 5, 2, 5, 6, 6, 2, 2, 1, 8, 7, 7, 7, 1, 3, 3, 1, 5, 6, 9, 8, 8, 6, 7, 8, 1, 7, 6, 8, 7, 7, 2, 1, 8, 6, 2, 9, 9, 3, 1, 9, 2, 6, 3, 5, 2, 4, 6, 8, 8, 2, 2, 2, 2, 4, 5, 1, 5, 4, 8, 1, 9, 9, 8, 7, 6, 7, 7, 5, 2, 8, 9, 2, 1, 3, 7, 4, 7, 5, 3, 5, 7, 3, 4, 9, 8, 3, 6, 5, 1, 1, 9, 7, 8, 5, 6, 6, 1, 6, 7, 1, 5 ]
// const B = [ 8, 4, 8, 7, 6, 6, 7, 9, 7, 5, 2, 4, 8, 4, 2, 1, 3, 8, 6, 7, 8, 4, 1, 8, 1, 1, 8, 9, 2, 3, 5, 3, 5, 1, 7, 9, 5, 7, 7, 7, 9, 8, 1, 3, 6, 3, 3, 3, 9, 9, 6, 3, 1, 9, 8, 5, 3, 2, 6, 6, 4, 8, 3, 6, 8, 9, 8, 5, 1, 7, 5, 4, 3, 6, 7, 1, 2, 6, 2, 8, 7, 6, 7, 4, 3, 3, 4, 5, 5, 5, 4, 6, 7, 9, 6, 3, 2, 3, 4, 3, 4, 1, 7, 9, 5, 2, 7, 4, 9, 8, 5, 2, 9, 8, 8, 5, 2, 3, 3, 2, 7, 2, 1, 8, 1, 8, 1, 7, 3, 7, 9, 4, 3, 7, 5, 1, 2, 1, 6, 1, 6, 7, 8, 1, 3, 5, 6, 2, 9, 8, 2, 6, 5, 4, 4, 2, 8, 6, 8, 3, 1, 5, 6, 7, 5, 6, 1, 5, 4, 8, 4, 8, 1, 1, 1, 7, 7, 9, 2, 6, 3, 8, 1, 8, 9, 9, 5, 6, 9, 2, 2, 8, 9, 8, 7, 1, 3, 6, 5, 7, 4, 1, 9, 8, 3, 4, 7, 4, 1, 5, 7, 9, 4, 4, 3, 1, 8, 4, 8, 1, 1, 8, 6, 3, 8, 6, 2, 7, 4, 6, 7, 8, 8, 9, 7, 9, 1, 3, 3, 7, 9, 8, 6, 4, 2, 4, 4, 8, 4, 3, 7, 2, 2, 8, 8, 9, 9, 7, 8, 2, 6, 2, 9, 8, 6, 8, 2, 5, 6, 5, 8, 6, 8, 7, 7, 1, 7, 7, 4, 6, 6, 8, 9, 8, 6, 1, 3, 4, 7, 9, 8, 2, 3, 7, 7, 7, 1, 9, 7, 7, 1, 1, 6, 7, 9, 2, 6, 7, 1, 3, 7, 6, 6, 8, 2, 1, 2, 7, 6, 8, 1, 3, 3, 9, 4, 7, 5, 7, 8, 3, 6, 9, 7, 9, 7, 5, 2, 7, 7, 8, 3, 1, 9, 8, 2, 6, 7, 6, 4, 4, 1, 7, 2, 2, 7, 3, 9, 4, 1 ]
const constructNode = arr =>{
    let head = new Node(arr[0])
    let node = head
    for(let i = 1; i < arr.length; i++){
        node.next = new Node(arr[i])
        node = node.next
    }
    console.log(head)
    return head;
}
const A = [ 192, 856, 647, 251, 498, 749, 252, 577, 322, 794, 490, 278, 754, 505, 688, 418, 486, 3, 700, 680, 707, 892, 37, 666, 9, 858, 802, 82, 441, 500, 64, 373, 174, 779, 346, 803, 760, 48, 783, 654, 731, 391, 733, 480, 5, 144, 919, 291, 180, 50, 326, 90, 437, 502, 527, 648, 361, 828, 729, 546, 934, 69, 209, 187, 365, 329, 276, 86, 348, 986, 344, 183, 495 ]
const node = constructNode(A)
module.exports.partition(node, 40)